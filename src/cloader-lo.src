;  cloader - Config loader for FujiNet
;    loads CONFIG.COM with high speed SIO and does in-line decompression with ZX0
;
;  2021 apc.atari@gmail.com
;
;  This program is free software; you can redistribute it and/or modify
;  it under the terms of the GNU General Public License as published by
;  the Free Software Foundation; either version 2 of the License, or
;  (at your option) any later version.
;
;  This program is distributed in the hope that it will be useful,
;  but WITHOUT ANY WARRANTY; without even the implied warranty of
;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;  GNU General Public License for more details.
;
;  You should have received a copy of the GNU General Public License
;  along with this program; if not, write to the Free Software
;  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

; get zx0 bootloader labels
    .IF .NOT .DEF PARTHI
	.OPT NO OBJ
        .include "zx0boot.src"
	.OPT OBJ
    .ENDIF

; used bootloader labels
; DOLOAD
; LOAD1
; JMPRUNV
; JMPSIO
; BUFFER
; RFINITL, RFINITH

; some "colors" (not only colors)
        * = $02C1

; CONFIG.COM start sector - use update-atr.py to update the value in final ATR image
; CFGSSEC .WORD $0D
CFGSSEC .WORD $FFFF ; placeholder

; progress bar speed factor - use update-atr.py to update the value in final ATR image
;
;   px:   size of progress bar in pixels
;   blks: number of blocks to load
;   = (1 + px) * 256 / blks = (1 + 48) * 256 / 175 = 71
; PBSF    .BYTE 71

; CFGSIZE = 8783 ; CONFIG.COM file size in bytes
; PBSF    .BYTE 12544/((CFGSIZE+124)/125) ; assuming SD
PBSF    .BYTE $FF ; placeholder

; colors - 2C4-2C8
        .BYTE $06, $0C, $04, $00, $04


; place our code after bootloader ($980)
        * = BOOTEND

; include HISIO code
    .IF .DEF HIGHSPEED
	SIOADR = *
	FASTVBI=1
	HISIO_MYPICODOS=1
	.include "hisiocode.src"
	SIOEND = *
; HISIO index retrieved from D1
; HISAV   .BYTE $FF       ; >=128 no high speed
HISAV   = SIOSPEED
SIOSPEED .BYTE $FF
    .ENDIF

BOOTOPT .BYTE 0                 ; boot options
                                ; 0 = HISIO + silent
                                ; 2 = standard SIO ($E459) with SIO sounds
PBOF    .BYTE 0                 ; progress bar offset to current byte
PBMASK  .BYTE $C0               ; progress bar pixel mask
SEC2PB  .BYTE 0                 ; sector count to progress bar update
DLSAV   .WORD 0                 ; original display list address
CLNVEC  .WORD CLEANUP           ; our RUN hook, for cleanup prior starting Config

    .IF .DEF HIGHSPEED
GETHICMD
	.BYTE $3F		; DCOMND = Get high speed
	.BYTE $40		; DSTATS = -> ATARI
	.WORD HISAV 	; DBUF
	.BYTE $03		; DTIMLO = 3 seconds
	.BYTE $00		; DRESVD = $00
	.WORD $0001     ; one byte
	.WORD $0000		; DAUX = 0
    .ENDIF

CMDSAVE
	.WORD 0 		; DBUF
	.BYTE 0 		; DTIMLO
	.BYTE 0		    ; DRESVD
	.WORD 0         ; AUX1/2

ALTCOLRS
    .BYTE $B4, $BC, $90, $00, $90

; Config Loader code
CLOADER
    .IF .DEF HIGHSPEED
        ; is Select button pressed?
        LDA $D01F
        AND #2
        EOR #2
        STA BOOTOPT
        BEQ ?SAV0       ; -> no Select, use HISIO
        ; Select pressed, continue with standard SIO
        ; change colors
        LDX #4
?ALTC   LDA ALTCOLRS,X
        STA $2C4,X
        DEX
        BPL ?ALTC
        RTS
        ; setup HISIO
        ; save SIO parameters for boot loader
?SAV0   LDX #5
?SAV1   LDA DBUFLO,X
        STA CMDSAVE,X
        DEX
        BPL ?SAV1
        ; get HISIO index, to HISAV
        LDX #9
?CS1    LDA GETHICMD,X
        STA DDEVIC+2,X
        DEX
        BPL ?CS1
        JSR NE459
        BMI ?NOHS1      ; -> high speed not supported by device
        ; redirect SIO to HISIO, patch COM/ZX0 loader
        LDA #<DOHISIO
        STA NE459+1
        STA JMPSIO+1
        LDA #>DOHISIO
        STA NE459+2
        STA JMPSIO+2
?NOHS1
        ; restore SIO parameters
        LDX #5
?RES1   LDA CMDSAVE,X
        STA DBUFLO,X
        DEX
        BPL ?RES1
    .ENDIF

        ; pass control to boot loader code
        RTS

NE459   JMP $E459       ; will be updated to call HISIO

        CLLOEND = *

    .IF .NOT .DEF PARTHI
; get labels from high speed part
	.OPT NO OBJ
        .include "cloader-hi.src"
	.OPT OBJ
    .ENDIF

; init address
	* = $02E2
	.WORD CLOADER
