;  cloader - Config loader for FujiNet, loads CONFIG.COM using HSIO routines
;  2021 apc.atari@gmail.com
;
;  This program is free software; you can redistribute it and/or modify
;  it under the terms of the GNU General Public License as published by
;  the Free Software Foundation; either version 2 of the License, or
;  (at your option) any later version.
;
;  This program is distributed in the hope that it will be useful,
;  but WITHOUT ANY WARRANTY; without even the implied warranty of
;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;  GNU General Public License for more details.
;
;  You should have received a copy of the GNU General Public License
;  along with this program; if not, write to the Free Software
;  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

; run address
	* = $02E0
	.WORD CLOADER

; colors
        * = $02C4
        .BYTE $06, $0C, $04, $00, $04

; get picoboot labels
	.OPT NO OBJ
        .include "picobootcode.src"
	.OPT OBJ
; with picoboot the order is - picoboot code, comload code, followed rread code

; useful labels
	.include "hisio.inc"

; place our code after picoboot loader ($980)
        * = PICOEND

; progress bar speed factor
; use cloader-updater.sh to update this field in compiled file, no need to recompile
;
;   px:   size of progress bar in pixels
;   blks: number of blocks to load
;   = (1 + px) * 256 / blks = (1 + 48) * 256 / 175 = 71
; PBSF    .BYTE 71
CFGSIZE = 21865 ; config.com file size in bytes
PBSF    .BYTE 12544/((CFGSIZE+124)/125) ; assuming SD

; progress bar offset to current byte
PBOF    .BYTE 0

; progress bar pixel mask
PBMASK  .BYTE $C0

; sector count to progress bar update
SEC2PB  .BYTE 0

; Config start sector
CFGSSEC .WORD 0

; original display list address
DLSAV   .WORD 0

; include HSIO code
    .IF .DEF HIGHSPEED
	SIOADR = *
	FASTVBI=1
	HISIO_MYPICODOS=1
	.include "hisiocode.src"
; HSIO index retrieved from D1
; HISAV   .BYTE $FF       ; >=128 no high speed
HISAV   = SIOSPEED
SIOSPEED .BYTE $FF
	SIOEND = *
    .ELSE
    .ENDIF

; Config Loader code
CLOADER
; setup our Display List
        LDA #0
        STA $D40E       ; disable NMI
        STA $D400       ; disable DMA
        LDA $230
        STA DLSAV
        LDA $231
        STA DLSAV+1
        LDA #<DLIST
        STA $230
        LDA #>DLIST
        STA $231
        LDA #$21        ; narrow play field
        STA $22F        ; shadow of DMACTL
        LDA #0
        STA $41         ; silent SIO
        LDX $14
        LDA #$C0
        STA $D40E       ; re-enable NMI
?WVBI   CPX $14
        BEQ ?WVBI       ; wait a bit before starting SIO calls (with critical flag set)

    .IF .DEF HIGHSPEED
; get HSIO index
        ; save current index into HISAV
        LDX #GETHICMD-SIOCMDS+11
        JSR CALLSIO
        BMI ?RDIR
        ; ; set index to 0
        ; LDA #0
        ; STA SIOSPEED
        ; LDX #SETHICMD-SIOCMDS+11
        ; JSR CALLSIO
        ; BPL ?CL1
        ; ; failed to set HSIO index to 0, use what we get
        ; LDA HISAV
        ; STA SIOSPEED
; ?CL1

; redirect SIO to HSIO, patch rreader to call HSIO
        LDA #<DOHISIO
        STA NE459+1
        STA ?RAGAIN+6
        LDA #>DOHISIO
        STA NE459+2
        STA ?RAGAIN+7
    .ENDIF

; read first directory sector
?RDIR   LDX #READCMD-SIOCMDS+11
        JSR CALLSIO
        BMI ?RDIR

; remember start sector of Config
	LDA BUF+32+3    ; 3rd file first sector
	STA CFGSSEC
	LDA BUF+32+4
	STA CFGSSEC+1

; load 2nd file into VRAM = 1kB banner
	LDY SECBYTE
	LDA BUF+16+3    ; 2nd file first sector
	STA BUF+1,Y
	LDA BUF+16+4
	STA BUF,Y
        JSR RREAD
        ; load address and length
        LDX #3
?LBH    LDA BANHDR,X
        STA ADR,X       ; ADR and BLEN
        DEX
        BPL ?LBH
        ; continue at LOACFG (RUN ADDR)
        LDA #<LOACFG
        STA $2E0
        LDA #>LOACFG
        STA $2E1
        ; jump into COM loader
        LDX #0
        LDY #0
        JMP ?MLOOP


LOACFG
; prepare "empty" progress bar
        LDA #$55
        LDX #11
?PB     STA PBAR,x
        DEX
        BPL ?PB
; patch COM loader to update progress bar
        LDA #<RREADPB
        STA ?DORD+1
        LDA #>RREADPB
        STA ?DORD+2
; release stack a bit
        LDX #$FB
        TXS
; load and start Config (3rd file)
	LDY SECBYTE
	LDA CFGSSEC
	STA BUF+1,Y
	LDA CFGSSEC+1
	STA BUF,Y
; continue at INICFG
        LDA #<INICFG
        STA ?EOF+3
        LDA #>INICFG
        STA ?EOF+4
        JMP DOLOAD


INICFG
; some cleanup here

;     .IF .DEF HIGHSPEED
; ; restore HSIO index to saved value
;         LDA HISAV
;         BMI ?RDL
;         STA HIVAL
;         LDX #SETHICMD-SIOCMDS+11
;         JSR CALLSIO
;     .ENDIF

; restore Display List
?RDL    LDA #0
        STA $D40E       ; disable NMI
        STA $D400       ; disable DMA
        LDA DLSAV
        STA $230
        LDA DLSAV+1
        STA $231
        LDA #$22        ; standard play field
        STA $22F        ; shadow of DMACTL
        LDA #3
        STA $41         ; noisy SIO
        LDX $14
        LDA #$C0
        STA $D40E       ; re-enable NMI
?WVBI2  CPX $14
        BEQ ?WVBI2      ; wait for next completed VBI
        ; call original INIT JMP ($2E2) and after RTS it will JMP($2E0)
        JMP ($2E2)


; progress bar update + read sector
RREADPB CLC
?TB2    LDA PBSF
        ADC SEC2PB
        STA SEC2PB
        BCC ?JRR
; update progress bar
        LDX PBOF
        LDA PBAR,X
        EOR PBMASK
        STA PBAR,X
        LDA PBMASK
        LSR A
        ROR A
        BCC ?UP1
        ROR A
        INC PBOF
?UP1    STA PBMASK
?JRR    JMP RREAD


CALLSIO LDY #11
?LO1    LDA SIOCMDS,X
        STA DDEVIC,Y
        DEX
        DEY
        BPL ?LO1
; new SIO entry point (will be updated for HSIO)
NE459   JMP $E459

; banner load address and size
BANHDR  .WORD BANNER, 1024

SIOCMDS
    .IF .DEF HIGHSPEED
GETHICMD
	.BYTE $31		; DDEVIC = D
	.BYTE $01		; DUNIT = D1
	.BYTE $3F		; DCOMND = Get high speed
	.BYTE $40		; DSTATS = -> ATARI
	.WORD HISAV 		; DBUF
	.BYTE $03		; DTIMLO = 3 seconds
	.BYTE $00		; DRESVD = $00
	.WORD 1              	; one byte
	.WORD $0000		; DAUX = 0
    .ENDIF

; SETHICMD
; 	.BYTE $70		; DDEVIC = $70 (Fuji)
; 	.BYTE $01		; DUNIT = 1
; 	.BYTE $E3		; DCOMND = Set high speed
; 	.BYTE $40		; DSTATS = -> ATARI
; 	.WORD $0000 		; DBUF
; 	.BYTE $03		; DTIMLO = 3 seconds
; 	.BYTE $00		; DRESVD = $00
; 	.WORD 0			; no data bytes
; HIVAL	.WORD $0000		; AUX1 = 0 - index, AUX2 = 0 - do not save

READCMD
	.BYTE $31		; DDEVIC = D
	.BYTE $01		; DUNIT = D1
	.BYTE $52		; DCOMND = Read
	.BYTE $40		; DSTATS = -> ATARI
	.WORD BUF 		; DBUF
	.BYTE $07		; DTIMLO = 7 seconds
	.BYTE $00		; DRESVD = $00
	.WORD $0080            	; 128 bytes
	.WORD $0169		; DAUX = 0

; video memory
VRAM    = $0E00
; progress bar address
PBAR    = VRAM+10
; logo address
BANNER  = VRAM+32

DLIST   .BYTE 112, 112, 112, 112, 112, 112, 112, 112
        ; banner area
        .BYTE 15+64, <BANNER, >BANNER
        .BYTE 15, 15, 15, 15, 15, 15,
        .BYTE 15, 15, 15, 15, 15, 15, 15, 15
        ; 4K boundary
        .BYTE 15+64, <(VRAM+512), >(VRAM+512)
        .BYTE 15, 15, 15, 15, 15, 15, 15, 15
        .BYTE 15, 15, 15, 15, 15, 15, 15, 15
        .BYTE 112, 112
        ; progress bar area
        .BYTE 13+64, <VRAM, >VRAM
        .BYTE 65, <DLIST, >DLIST

LOADEREND = *
